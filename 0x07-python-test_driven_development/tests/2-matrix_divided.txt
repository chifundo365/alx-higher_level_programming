``2-matrix_divided`` module
===============â‰ ===========

Using ``matrix divide``
----------------------

Import function from module:
	>>> matrix_divided =  __import__("2-matrix_divided").matrix_divided

Initialise Normalc Matrix:
	>>> normal_matrix = [[12, 14, 90], [10, 4, 2]]

Matrix with values not  int/float
	>>> matrix = [[12, 23, 'h'], ['hello', 12, '13']]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Row lengths not equal
	>>> matrix = [[23, 45], [50, 23.50, 30]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size

Div is Zero
	>>> matrix_divided(normal_matrix, 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero

Div is not an int or float
	>>> matrix_divided(normal_matrix, "biggest number")
	Traceback (most recent call last):
		...
	TypeError: div must be a number

Passing 1 argument instead of 2
	>>> matrix_divided(normal_matrix)
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

Passing no argument
	>>> matrix_divided()
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Normal matrix and div
	>>> matrix_divided(normal_matrix, 2)
	[[6.0, 7.0, 45.0], [5.0, 2.0, 1.0]]

Divide matrix with a zerov as value
	>>> matrix = [[34, 0, 89], [0, 13, 97]]
	>>> matrix_divided(matrix, 5)
	[[6.8, 0.0, 17.8], [0.0, 2.6, 19.4]]

Passing an infinity float number
	>>> matrix = [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
	>>> matrix_divided(matrix, float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
